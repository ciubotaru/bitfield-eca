CC=@CC@
export CC
datarootdir=@datarootdir@
prefix=@prefix@
exec_prefix=@prefix@
libdir=@libdir@
includedir=@includedir@
mandir=@mandir@
AR=ar
CFLAGS=-Wall -O3
export CFLAGS
VERSION=0.0.1
MANDIR=man
TESTDIR=tests
EXAMPLEDIR=examples
LD_LIBRARY_PATH := $(shell pwd):$(LD_LIBRARY_PATH)
export LD_LIBRARY_PATH
HAVE_BITFIELD=@HAVE_BITFIELD@
export HAVE_BITFIELD
ifeq ($(HAVE_BITFIELD), 0)
BITFIELD_LIB = -L../bitfield
BITFIELD_INC = -I../bitfield
endif
PACKAGE_VERSION=@PACKAGE_VERSION@

.PHONY: bitfield test check man shared static install install-lib install-man install-header clean distclean uninstall uninstall-lib uninstall-man uninstall-header example examples

all: bitfield shared static

bitfield:
	@if [ $(HAVE_BITFIELD) -eq 0 ]; then \
	if [ ! -d "bitfield" ] && [ ! -f "bitfield" ]; then echo "Local bitfield is required, but bitfield source tree is missing.\nPlease, provide 'bitfield' directory with source tree and type 'make' again."; exit 1; fi; \
	echo 'Building local bitfield.'; \
	$(MAKE) -C bitfield clean; \
	cd bitfield; \
	./configure --prefix=$(prefix); \
	cd ..; \
	$(MAKE) -C bitfield all; \
	else echo 'Using systemwide bitfield.'; fi

shared: libbitfield-eca.so.$(VERSION)
libbitfield-eca.so.$(VERSION): eca.c
	$(CC) $(CFLAGS) -c -fpic eca.c -o eca-shared.o -I. $(BITFIELD_INC)
	$(CC) $(CFLAGS) -shared -Wl,-soname,libbitfield-eca.so.0 -o libbitfield-eca.so.$(VERSION) eca-shared.o -I. $(BITFIELD_LIB) $(BITFIELD_INC) -lbitfield
	for i in libbitfield-eca.so.0 libbitfield-eca.so; do ln -svf libbitfield-eca.so.$(VERSION) $$i; done

static: libbitfield-eca.a
libbitfield-eca.a: eca.c
	$(CC) $(CFLAGS) -c eca.c -o eca-static.o -I. $(BITFIELD_INC)
	@if [ $(HAVE_BITFIELD) -eq 0 ]; then \
	$(AR) rcs libbitfield-eca.a eca-static.o bitfield/bf-static.o; \
	else \
	$(AR) rcs libbitfield-eca.a eca-static.o; \
	fi

test: check

check:
	$(MAKE) -C $(TESTDIR)

examples: example

example:
	$(MAKE) -C $(EXAMPLEDIR)

install: install-lib install-header install-man install-bitfield

install-lib:
	mkdir -p $(DESTDIR)$(libdir)
	for i in libbitfield-eca.so.0 libbitfield-eca.so libbitfield-eca.so.$(VERSION) librule30.a; do if [ -e $(DESTDIR)$(libdir)/$$i ]; then rm -v $(DESTDIR)$(libdir)/$$i; fi; done
	install -m 0644 libbitfield-eca.so.$(VERSION) $(DESTDIR)$(libdir)
	ln -sv libbitfield-eca.so.$(VERSION) $(DESTDIR)$(libdir)/libbitfield-eca.so.0
	ln -sv libbitfield-eca.so.$(VERSION) $(DESTDIR)$(libdir)/libbitfield-eca.so
	install -m 0644 libbitfield-eca.a $(DESTDIR)$(libdir)

install-header:
	mkdir -p $(DESTDIR)$(includedir)
	install -m 644 eca.h $(DESTDIR)$(includedir)/bitfield-eca.h

install-man:
	$(MAKE) -C $(MANDIR) install

install-bitfield:
	@if [ $(HAVE_BITFIELD) -eq 0 ]; then \
	echo '* * *\nDo not forget to run "make install" in your bitfield source tree.'; fi

uninstall: uninstall-lib uninstall-header uninstall-man uninstall-bitfield

uninstall-lib:
	for i in libbitfield-eca.so.0 libbitfield-eca.so libbitfield-eca.so.$(VERSION) libbitfield-eca.a; do if [ -e $(DESTDIR)$(libdir)/$$i ]; then rm -v $(DESTDIR)$(libdir)/$$i; fi; done

uninstall-header:
	if [ -e $(DESTDIR)$(includedir)/bitfield-eca.h ]; then rm -v $(DESTDIR)$(includedir)/bitfield-eca.h; fi

uninstall-man:
	$(MAKE) -C $(MANDIR) uninstall

uninstall-bitfield:
	@if [ $(HAVE_BITFIELD) -eq 0 ]; then \
	echo '* * *\nDo not forget to run "make uninstall" in your bitfield source tree.'; fi

clean:
	rm -rvf *.a *.o *.so*
	$(MAKE) -C $(TESTDIR) clean
	$(MAKE) -C $(EXAMPLEDIR) clean

distclean: clean
	rm config.log config.status config.h Makefile
	$(MAKE) -C $(MANDIR) distclean
	$(MAKE) -C $(TESTDIR) distclean
	$(MAKE) -C $(EXAMPLEDIR) distclean
